import Head from 'next/head'
import { useEffect, useState } from 'react'
import {
  updateDoc,
  doc,
  getDoc,
} from 'firebase/firestore';
import styles from '../styles/Home.module.css'
import { database } from '../firebaseConfig';
import { useRouter } from 'next/router';
import {
  getAuth
}from 'firebase/auth';
export default function Home() {
  const [ans, setans] = useState(null);
  const auth = getAuth();
  const router = useRouter();
  const user = auth.currentUser;
  const [email, setemail] = useState('');  // Initialize with an empty string
  const [uid, setuid] = useState('');  // Initialize with an empty string

  useEffect(() => {
    const storedemail = sessionStorage.getItem('user.email');
    const storeduid = sessionStorage.getItem('user.uid');
    setemail(storedemail || '');
    setuid(storeduid || '');
}, []);

//NEW TRY
let user_data;
if (email && uid) {
user_data = doc(database, email, uid);
} else {
// Handle the case where email or uid is empty
console.error('Email or UID is empty.');
}
//NEW TRY
  //const user_data=doc(database,user?.email,user?.uid);
  
  const mainAns_data = doc(database, 'answer', 'q');
  
    
      const fetchFieldValue = async (a) => {
        try {
         // const user_data=doc(database,user?.email,user?.uid);

          const user_doc = await getDoc(user_data);
          const teamname = user_doc.get('name');
          const team_data = doc(database,"teams",teamname);

          const mainAns_doc = await getDoc(mainAns_data);
          const team_doc = await getDoc(team_data);

          
          
          
          if (mainAns_doc.exists()) {
            const mainAns = mainAns_doc.get(a);
            const userAns = user_doc.get(a);
            const teamMark = team_doc.get(a);
            
            const mark = ()=>{
              if (userAns==mainAns){
                return true;
                
              }
              else {
                if(teamMark==true){
                  return true;
               }
               else{
                return false;
               }
            };
            }
            updateDoc(team_data,{
              [a]: mark()
            }
            )
            
          } else {
            console.log('No such document');
          }
        } catch (error) {
          console.error('Error fetching field value:', error);
        }
      };

  const addData = (a) => {
      updateDoc(doc(database,user.email,user.uid), { 
        [a]: ans
    })
    fetchFieldValue(a)
      .then(() => {
        alert('Data Sent')
      })
      .catch((err) => {
        console.error(err);
      })
    }
    const next = (b) => {
      router.push(b)
    }
    const logout = () => {
      sessionStorage.removeItem('Token1')
      sessionStorage.removeItem('user.email')
      sessionStorage.removeItem('user.uid')
      router.push('/login')
    }
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Next CRUD AUTH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main className={styles.main}>
        <div>
          <button onClick={logout}>Log Out</button>
        </div>
        <h1> type h </h1>
        <input
          placeholder='enter your ans'
          className={styles.inputBox}
          onChange={(e) => setans(e.target.value)}
        />
          <button
            className={styles.button}
            onClick={() => addData('r3q1')}
          >
            Submit
          </button> 

        <h1> type i </h1>
        <input
          placeholder='enter your ans'
          className={styles.inputBox}
          onChange={(e) => setans(e.target.value)}
        />
          <button
            className={styles.button}
            onClick={() => addData('r3q2')}
          >
            Submit
          </button>

        <h1> type j </h1>
        <input
          placeholder='enter your ans'
          className={styles.inputBox}
          onChange={(e) => setans(e.target.value)}
        />
          <button
            className={styles.button}
            onClick={() => addData('r3q3')}
          >
            Submit
          </button>

          <hr />
          <button
            className={styles.button}
            onClick={() =>next('/q1')}
          >
            round 1
          </button>

          <hr/>
          <button
            className={styles.button}
            onClick={() => next('/q3')}
          >
            round 2
          </button>
      </main>
    </div>
  )
}
